{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hurma\\\\OneDrive\\\\project-manager\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('Login successful!');\n        localStorage.setItem('user', JSON.stringify(data.customer));\n        navigate('/dashboard'); // go to dashboard after login\n      } else {\n        const err = await response.json();\n        alert(`Login failed: ${err.message}`);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Error: Failed to fetch');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"J79ccTyvB9Ws2FCIUe6WyNTjHnU=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","navigate","handleChange","e","prev","target","name","value","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","localStorage","setItem","customer","err","message","error","console","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","label","type","onChange","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hurma/OneDrive/project-manager/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Container } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert('Login successful!');\r\n        localStorage.setItem('user', JSON.stringify(data.customer));\r\n        navigate('/dashboard'); // go to dashboard after login\r\n      } else {\r\n        const err = await response.json();\r\n        alert(`Login failed: ${err.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      alert('Error: Failed to fetch');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Login</Typography>\r\n      <form>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }} onClick={handleLogin}>\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}