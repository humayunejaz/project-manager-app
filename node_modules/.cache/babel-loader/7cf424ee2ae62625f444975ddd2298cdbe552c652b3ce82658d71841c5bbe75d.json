{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hurma\\\\OneDrive\\\\project-manager\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { supabase } from './supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography, Button, Container, Box, Divider, CircularProgress, Paper, List, ListItem, ListItemText, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [ownedProjects, setOwnedProjects] = useState([]);\n  const [invitedProjects, setInvitedProjects] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [projectToEdit, setProjectToEdit] = useState(null);\n  const [editFields, setEditFields] = useState({\n    project_name: '',\n    start_date: '',\n    end_date: '',\n    countries: [],\n    cities: {}\n  });\n  const availableCountries = ['Canada', 'USA', 'UK'];\n  const availableCities = {\n    Canada: ['Toronto', 'Vancouver', 'Montreal'],\n    USA: ['New York', 'Los Angeles', 'Chicago'],\n    UK: ['London', 'Manchester', 'Liverpool']\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const {\n        data: userData\n      } = await supabase.auth.getUser();\n      const user = userData === null || userData === void 0 ? void 0 : userData.user;\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      setUserEmail(user.email);\n      const {\n        data: owned\n      } = await supabase.from('projects').select('*').eq('owner_id', user.id);\n      setOwnedProjects(owned || []);\n      const {\n        data: invites\n      } = await supabase.from('invitations').select('project_id').eq('invited_email', user.email);\n      const projectIds = invites.map(i => i.project_id);\n      let invited = [];\n      if (projectIds.length > 0) {\n        const {\n          data: invitedProjects\n        } = await supabase.from('projects').select('*').in('id', projectIds);\n        invited = invitedProjects || [];\n      }\n      setInvitedProjects(invited);\n      setLoading(false);\n    };\n    fetchProjects();\n  }, [navigate]);\n  const handleDelete = async projectId => {\n    const confirmed = window.confirm('Are you sure you want to delete this project?');\n    if (!confirmed) return;\n    const {\n      error\n    } = await supabase.from('projects').delete().eq('id', projectId);\n    if (error) {\n      alert('Failed to delete project');\n    } else {\n      setOwnedProjects(prev => prev.filter(p => p.id !== projectId));\n    }\n  };\n  const openEditDialog = project => {\n    setProjectToEdit(project);\n    setEditFields({\n      project_name: project.project_name,\n      start_date: project.start_date,\n      end_date: project.end_date,\n      countries: project.countries || [],\n      cities: project.cities || {}\n    });\n    setEditDialogOpen(true);\n  };\n  const handleEditFieldChange = (field, value) => {\n    setEditFields(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSaveEdit = async () => {\n    const {\n      error\n    } = await supabase.from('projects').update({\n      project_name: editFields.project_name,\n      start_date: editFields.start_date,\n      end_date: editFields.end_date,\n      countries: editFields.countries,\n      cities: editFields.cities\n    }).eq('id', projectToEdit.id);\n    if (error) {\n      alert('Failed to update project');\n    } else {\n      setOwnedProjects(prev => prev.map(p => p.id === projectToEdit.id ? {\n        ...p,\n        ...editFields\n      } : p));\n      setEditDialogOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Welcome to Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4\n      },\n      children: [\"Logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: userEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => navigate('/create-project'),\n        children: \"+ Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), ownedProjects.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"You haven\\u2019t created any projects yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          children: ownedProjects.map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => openEditDialog(project),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"error\",\n                onClick: () => handleDelete(project.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: project.project_name,\n              secondary: `Start: ${project.start_date} — End: ${project.end_date}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this)\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Projects You\\u2019ve Been Invited To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), invitedProjects.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"No invitations yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          children: invitedProjects.map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: project.project_name,\n              secondary: `Start: ${project.start_date} — End: ${project.end_date}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Project Name\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: editFields.project_name,\n          onChange: e => handleEditFieldChange('project_name', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Date\",\n          type: \"date\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: editFields.start_date,\n          onChange: e => handleEditFieldChange('start_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Date\",\n          type: \"date\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: editFields.end_date,\n          onChange: e => handleEditFieldChange('end_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: editFields.countries,\n            onChange: e => {\n              const selected = e.target.value;\n              const newCities = {\n                ...editFields.cities\n              };\n              selected.forEach(c => {\n                if (!newCities[c]) newCities[c] = [];\n              });\n              Object.keys(newCities).forEach(c => {\n                if (!selected.includes(c)) delete newCities[c];\n              });\n              setEditFields(prev => ({\n                ...prev,\n                countries: selected,\n                cities: newCities\n              }));\n            },\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 0.5,\n                flexWrap: 'wrap'\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this),\n            children: availableCountries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country,\n              children: country\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), editFields.countries.map(country => /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: `Cities in ${country}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: editFields.cities[country] || [],\n            onChange: e => {\n              const selected = e.target.value;\n              setEditFields(prev => ({\n                ...prev,\n                cities: {\n                  ...prev.cities,\n                  [country]: selected\n                }\n              }));\n            },\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 0.5,\n                flexWrap: 'wrap'\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 46\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this),\n            children: (availableCities[country] || []).map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, country, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"jIXvysfbSbr1cJBCtqu9Pa1NmRA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","supabase","useNavigate","Typography","Button","Container","Box","Divider","CircularProgress","Paper","List","ListItem","ListItemText","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","Delete","DeleteIcon","Edit","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","ownedProjects","setOwnedProjects","invitedProjects","setInvitedProjects","userEmail","setUserEmail","loading","setLoading","editDialogOpen","setEditDialogOpen","projectToEdit","setProjectToEdit","editFields","setEditFields","project_name","start_date","end_date","countries","cities","availableCountries","availableCities","Canada","USA","UK","navigate","fetchProjects","data","userData","auth","getUser","user","email","owned","from","select","eq","id","invites","projectIds","map","i","project_id","invited","length","in","handleDelete","projectId","confirmed","window","confirm","error","delete","alert","prev","filter","p","openEditDialog","project","handleEditFieldChange","field","value","handleSaveEdit","update","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","secondaryAction","color","primary","secondary","open","onClose","fullWidth","label","margin","onChange","e","target","type","InputLabelProps","shrink","multiple","selected","newCities","forEach","c","Object","keys","includes","renderValue","display","gap","flexWrap","country","city","_c","$RefreshReg$"],"sources":["C:/Users/hurma/OneDrive/project-manager/src/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { supabase } from './supabase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Box,\r\n  Divider,\r\n  CircularProgress,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\n\r\nfunction Dashboard() {\r\n  const [ownedProjects, setOwnedProjects] = useState([]);\r\n  const [invitedProjects, setInvitedProjects] = useState([]);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [projectToEdit, setProjectToEdit] = useState(null);\r\n  const [editFields, setEditFields] = useState({\r\n    project_name: '',\r\n    start_date: '',\r\n    end_date: '',\r\n    countries: [],\r\n    cities: {}\r\n  });\r\n\r\n  const availableCountries = ['Canada', 'USA', 'UK'];\r\n  const availableCities = {\r\n    Canada: ['Toronto', 'Vancouver', 'Montreal'],\r\n    USA: ['New York', 'Los Angeles', 'Chicago'],\r\n    UK: ['London', 'Manchester', 'Liverpool']\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const { data: userData } = await supabase.auth.getUser();\r\n      const user = userData?.user;\r\n\r\n      if (!user) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      setUserEmail(user.email);\r\n\r\n      const { data: owned } = await supabase\r\n        .from('projects')\r\n        .select('*')\r\n        .eq('owner_id', user.id);\r\n\r\n      setOwnedProjects(owned || []);\r\n\r\n      const { data: invites } = await supabase\r\n        .from('invitations')\r\n        .select('project_id')\r\n        .eq('invited_email', user.email);\r\n\r\n      const projectIds = invites.map(i => i.project_id);\r\n\r\n      let invited = [];\r\n      if (projectIds.length > 0) {\r\n        const { data: invitedProjects } = await supabase\r\n          .from('projects')\r\n          .select('*')\r\n          .in('id', projectIds);\r\n\r\n        invited = invitedProjects || [];\r\n      }\r\n\r\n      setInvitedProjects(invited);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchProjects();\r\n  }, [navigate]);\r\n\r\n  const handleDelete = async (projectId) => {\r\n    const confirmed = window.confirm('Are you sure you want to delete this project?');\r\n    if (!confirmed) return;\r\n\r\n    const { error } = await supabase.from('projects').delete().eq('id', projectId);\r\n    if (error) {\r\n      alert('Failed to delete project');\r\n    } else {\r\n      setOwnedProjects(prev => prev.filter(p => p.id !== projectId));\r\n    }\r\n  };\r\n\r\n  const openEditDialog = (project) => {\r\n    setProjectToEdit(project);\r\n    setEditFields({\r\n      project_name: project.project_name,\r\n      start_date: project.start_date,\r\n      end_date: project.end_date,\r\n      countries: project.countries || [],\r\n      cities: project.cities || {}\r\n    });\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditFieldChange = (field, value) => {\r\n    setEditFields(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    const { error } = await supabase\r\n      .from('projects')\r\n      .update({\r\n        project_name: editFields.project_name,\r\n        start_date: editFields.start_date,\r\n        end_date: editFields.end_date,\r\n        countries: editFields.countries,\r\n        cities: editFields.cities\r\n      })\r\n      .eq('id', projectToEdit.id);\r\n\r\n    if (error) {\r\n      alert('Failed to update project');\r\n    } else {\r\n      setOwnedProjects(prev =>\r\n        prev.map(p =>\r\n          p.id === projectToEdit.id ? { ...p, ...editFields } : p\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Welcome to Your Dashboard</Typography>\r\n      <Typography variant=\"body1\" sx={{ mb: 4 }}>Logged in as: <strong>{userEmail}</strong></Typography>\r\n\r\n      <Box sx={{ mb: 4 }}>\r\n        <Button variant=\"contained\" onClick={() => navigate('/create-project')}>\r\n          + Create New Project\r\n        </Button>\r\n      </Box>\r\n\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <Paper sx={{ p: 2, mb: 4 }}>\r\n            <Typography variant=\"h6\">Your Projects</Typography>\r\n            <Divider sx={{ mb: 1 }} />\r\n            {ownedProjects.length === 0 ? (\r\n              <Typography variant=\"body2\">You haven’t created any projects yet.</Typography>\r\n            ) : (\r\n              <List>\r\n                {ownedProjects.map((project) => (\r\n                  <ListItem\r\n                    key={project.id}\r\n                    secondaryAction={\r\n                      <>\r\n                        <IconButton onClick={() => openEditDialog(project)}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton color=\"error\" onClick={() => handleDelete(project.id)}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    }\r\n                  >\r\n                    <ListItemText\r\n                      primary={project.project_name}\r\n                      secondary={`Start: ${project.start_date} — End: ${project.end_date}`}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\">Projects You’ve Been Invited To</Typography>\r\n            <Divider sx={{ mb: 1 }} />\r\n            {invitedProjects.length === 0 ? (\r\n              <Typography variant=\"body2\">No invitations yet.</Typography>\r\n            ) : (\r\n              <List>\r\n                {invitedProjects.map((project) => (\r\n                  <ListItem key={project.id}>\r\n                    <ListItemText\r\n                      primary={project.project_name}\r\n                      secondary={`Start: ${project.start_date} — End: ${project.end_date}`}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n\r\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Edit Project</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Project Name\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={editFields.project_name}\r\n            onChange={(e) => handleEditFieldChange('project_name', e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={editFields.start_date}\r\n            onChange={(e) => handleEditFieldChange('start_date', e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={editFields.end_date}\r\n            onChange={(e) => handleEditFieldChange('end_date', e.target.value)}\r\n          />\r\n\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>Countries</InputLabel>\r\n            <Select\r\n              multiple\r\n              value={editFields.countries}\r\n              onChange={(e) => {\r\n                const selected = e.target.value;\r\n                const newCities = { ...editFields.cities };\r\n                selected.forEach((c) => {\r\n                  if (!newCities[c]) newCities[c] = [];\r\n                });\r\n                Object.keys(newCities).forEach((c) => {\r\n                  if (!selected.includes(c)) delete newCities[c];\r\n                });\r\n                setEditFields((prev) => ({\r\n                  ...prev,\r\n                  countries: selected,\r\n                  cities: newCities\r\n                }));\r\n              }}\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\r\n                  {selected.map((value) => <Chip key={value} label={value} />)}\r\n                </Box>\r\n              )}\r\n            >\r\n              {availableCountries.map((country) => (\r\n                <MenuItem key={country} value={country}>{country}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {editFields.countries.map((country) => (\r\n            <FormControl fullWidth sx={{ mt: 2 }} key={country}>\r\n              <InputLabel>{`Cities in ${country}`}</InputLabel>\r\n              <Select\r\n                multiple\r\n                value={editFields.cities[country] || []}\r\n                onChange={(e) => {\r\n                  const selected = e.target.value;\r\n                  setEditFields(prev => ({\r\n                    ...prev,\r\n                    cities: {\r\n                      ...prev.cities,\r\n                      [country]: selected\r\n                    }\r\n                  }));\r\n                }}\r\n                renderValue={(selected) => (\r\n                  <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\r\n                    {selected.map((value) => <Chip key={value} label={value} />)}\r\n                  </Box>\r\n                )}\r\n              >\r\n                {(availableCities[country] || []).map((city) => (\r\n                  <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          ))}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleSaveEdit}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}