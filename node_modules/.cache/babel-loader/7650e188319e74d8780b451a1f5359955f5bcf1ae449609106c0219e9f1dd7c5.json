{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hurma\\\\OneDrive\\\\project-manager\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { supabase } from './supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography, Button, Container, Box, Divider, CircularProgress, Paper, List, ListItem, ListItemText, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [ownedProjects, setOwnedProjects] = useState([]);\n  const [invitedProjects, setInvitedProjects] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [projectToEdit, setProjectToEdit] = useState(null);\n  const [editFields, setEditFields] = useState({\n    project_name: '',\n    start_date: '',\n    end_date: '',\n    countries: [],\n    cities: {},\n    travelers: []\n  });\n  const availableCountries = ['Canada', 'USA', 'UK'];\n  const availableCities = {\n    Canada: ['Toronto', 'Vancouver', 'Montreal'],\n    USA: ['New York', 'Los Angeles', 'Chicago'],\n    UK: ['London', 'Manchester', 'Liverpool']\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const {\n        data: userData\n      } = await supabase.auth.getUser();\n      const user = userData === null || userData === void 0 ? void 0 : userData.user;\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      setUserEmail(user.email);\n      const {\n        data: owned\n      } = await supabase.from('projects').select('*').eq('owner_id', user.id);\n      setOwnedProjects(owned || []);\n      const {\n        data: invites\n      } = await supabase.from('invitations').select('project_id').eq('invited_email', user.email);\n      const projectIds = invites.map(i => i.project_id);\n      let invited = [];\n      if (projectIds.length > 0) {\n        const {\n          data: invitedProjects\n        } = await supabase.from('projects').select('*').in('id', projectIds);\n        invited = invitedProjects || [];\n      }\n      setInvitedProjects(invited);\n      setLoading(false);\n    };\n    fetchProjects();\n  }, [navigate]);\n  const handleDelete = async projectId => {\n    const confirmed = window.confirm('Are you sure you want to delete this project?');\n    if (!confirmed) return;\n    const {\n      error\n    } = await supabase.from('projects').delete().eq('id', projectId);\n    if (!error) {\n      setOwnedProjects(prev => prev.filter(p => p.id !== projectId));\n    }\n  };\n  const openEditDialog = async project => {\n    setProjectToEdit(project);\n    const {\n      data: travelers\n    } = await supabase.from('invitations').select('*').eq('project_id', project.id);\n    setEditFields({\n      project_name: project.project_name,\n      start_date: project.start_date,\n      end_date: project.end_date,\n      countries: project.countries || [],\n      cities: project.cities || {},\n      travelers: travelers || []\n    });\n    setEditDialogOpen(true);\n  };\n  const handleEditFieldChange = (field, value) => {\n    setEditFields(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSaveEdit = async () => {\n    const {\n      project_name,\n      start_date,\n      end_date,\n      countries,\n      cities,\n      travelers\n    } = editFields;\n    const {\n      error\n    } = await supabase.from('projects').update({\n      project_name,\n      start_date,\n      end_date,\n      countries,\n      cities\n    }).eq('id', projectToEdit.id);\n    if (error) {\n      alert('Failed to update project');\n      return;\n    }\n\n    // Get existing invitations\n    const {\n      data: existing\n    } = await supabase.from('invitations').select('*').eq('project_id', projectToEdit.id);\n    const existingEmails = new Set(existing.map(i => i.invited_email));\n    const updatedEmails = new Set(travelers.map(t => t.invited_email));\n\n    // Insert or update travelers\n    for (const t of travelers) {\n      const existingTraveler = existing.find(e => e.invited_email === t.invited_email);\n      if (existingTraveler) {\n        await supabase.from('invitations').update({\n          name: t.name\n        }).eq('id', existingTraveler.id);\n      } else {\n        await supabase.from('invitations').insert({\n          project_id: projectToEdit.id,\n          name: t.name,\n          invited_email: t.invited_email,\n          status: 'pending'\n        });\n      }\n    }\n\n    // Delete removed travelers\n    for (const e of existing) {\n      if (!updatedEmails.has(e.invited_email)) {\n        await supabase.from('invitations').delete().eq('id', e.id);\n      }\n    }\n    setOwnedProjects(prev => prev.map(p => p.id === projectToEdit.id ? {\n      ...p,\n      project_name,\n      start_date,\n      end_date,\n      countries,\n      cities\n    } : p));\n    alert('Project updated');\n    setEditDialogOpen(false);\n  };\n  const handleTravelerChange = (index, field, value) => {\n    const updated = [...editFields.travelers];\n    updated[index][field] = value;\n    setEditFields(prev => ({\n      ...prev,\n      travelers: updated\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mb: 3\n      },\n      children: [\"Logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: userEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => navigate('/create-project'),\n        children: \"+ Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), ownedProjects.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No projects yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          children: ownedProjects.map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => openEditDialog(project),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"error\",\n                onClick: () => handleDelete(project.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: project.project_name,\n              secondary: `Start: ${project.start_date} â€” End: ${project.end_date}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Invited Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: invitedProjects.map(p => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: p.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Project Name\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: editFields.project_name,\n          onChange: e => handleEditFieldChange('project_name', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Date\",\n          type: \"date\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: editFields.start_date,\n          onChange: e => handleEditFieldChange('start_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Date\",\n          type: \"date\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: editFields.end_date,\n          onChange: e => handleEditFieldChange('end_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: editFields.countries,\n            onChange: e => {\n              const selected = e.target.value;\n              const newCities = {\n                ...editFields.cities\n              };\n              selected.forEach(c => {\n                if (!newCities[c]) newCities[c] = [];\n              });\n              Object.keys(newCities).forEach(c => {\n                if (!selected.includes(c)) delete newCities[c];\n              });\n              setEditFields(prev => ({\n                ...prev,\n                countries: selected,\n                cities: newCities\n              }));\n            },\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 0.5,\n                flexWrap: 'wrap'\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this),\n            children: availableCountries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country,\n              children: country\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), editFields.countries.map(country => /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: `Cities in ${country}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: editFields.cities[country] || [],\n            onChange: e => {\n              const selected = e.target.value;\n              setEditFields(prev => ({\n                ...prev,\n                cities: {\n                  ...prev.cities,\n                  [country]: selected\n                }\n              }));\n            },\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 0.5,\n                flexWrap: 'wrap'\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 46\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this),\n            children: (availableCities[country] || []).map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, country, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Travelers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), editFields.travelers.map((t, i) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              my: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              value: t.name,\n              onChange: e => handleTravelerChange(i, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              value: t.invited_email,\n              onChange: e => handleTravelerChange(i, 'invited_email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: () => {\n                const updated = [...editFields.travelers];\n                updated.splice(i, 1);\n                setEditFields(prev => ({\n                  ...prev,\n                  travelers: updated\n                }));\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditFields(prev => ({\n              ...prev,\n              travelers: [...prev.travelers, {\n                name: '',\n                invited_email: ''\n              }]\n            })),\n            children: \"+ Add Traveler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"i/LimF2Xvqcl0eHURSsgHGlB3sU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","supabase","useNavigate","Typography","Button","Container","Box","Divider","CircularProgress","Paper","List","ListItem","ListItemText","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","Delete","DeleteIcon","Edit","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","ownedProjects","setOwnedProjects","invitedProjects","setInvitedProjects","userEmail","setUserEmail","loading","setLoading","editDialogOpen","setEditDialogOpen","projectToEdit","setProjectToEdit","editFields","setEditFields","project_name","start_date","end_date","countries","cities","travelers","availableCountries","availableCities","Canada","USA","UK","navigate","fetchProjects","data","userData","auth","getUser","user","email","owned","from","select","eq","id","invites","projectIds","map","i","project_id","invited","length","in","handleDelete","projectId","confirmed","window","confirm","error","delete","prev","filter","p","openEditDialog","project","handleEditFieldChange","field","value","handleSaveEdit","update","alert","existing","existingEmails","Set","invited_email","updatedEmails","t","existingTraveler","find","e","name","insert","status","has","handleTravelerChange","index","updated","maxWidth","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","secondaryAction","color","primary","secondary","open","onClose","fullWidth","label","margin","onChange","target","type","InputLabelProps","shrink","multiple","selected","newCities","forEach","c","Object","keys","includes","renderValue","display","gap","flexWrap","country","city","my","splice","_c","$RefreshReg$"],"sources":["C:/Users/hurma/OneDrive/project-manager/src/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { supabase } from './supabase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Typography, Button, Container, Box, Divider, CircularProgress, Paper, List, ListItem, ListItemText,\r\n  IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField,\r\n  FormControl, InputLabel, Select, MenuItem, Chip\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\n\r\nfunction Dashboard() {\r\n  const [ownedProjects, setOwnedProjects] = useState([]);\r\n  const [invitedProjects, setInvitedProjects] = useState([]);\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [projectToEdit, setProjectToEdit] = useState(null);\r\n  const [editFields, setEditFields] = useState({\r\n    project_name: '',\r\n    start_date: '',\r\n    end_date: '',\r\n    countries: [],\r\n    cities: {},\r\n    travelers: []\r\n  });\r\n\r\n  const availableCountries = ['Canada', 'USA', 'UK'];\r\n  const availableCities = {\r\n    Canada: ['Toronto', 'Vancouver', 'Montreal'],\r\n    USA: ['New York', 'Los Angeles', 'Chicago'],\r\n    UK: ['London', 'Manchester', 'Liverpool']\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const { data: userData } = await supabase.auth.getUser();\r\n      const user = userData?.user;\r\n      if (!user) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      setUserEmail(user.email);\r\n\r\n      const { data: owned } = await supabase\r\n        .from('projects')\r\n        .select('*')\r\n        .eq('owner_id', user.id);\r\n\r\n      setOwnedProjects(owned || []);\r\n\r\n      const { data: invites } = await supabase\r\n        .from('invitations')\r\n        .select('project_id')\r\n        .eq('invited_email', user.email);\r\n\r\n      const projectIds = invites.map(i => i.project_id);\r\n      let invited = [];\r\n\r\n      if (projectIds.length > 0) {\r\n        const { data: invitedProjects } = await supabase\r\n          .from('projects')\r\n          .select('*')\r\n          .in('id', projectIds);\r\n\r\n        invited = invitedProjects || [];\r\n      }\r\n\r\n      setInvitedProjects(invited);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchProjects();\r\n  }, [navigate]);\r\n\r\n  const handleDelete = async (projectId) => {\r\n    const confirmed = window.confirm('Are you sure you want to delete this project?');\r\n    if (!confirmed) return;\r\n\r\n    const { error } = await supabase.from('projects').delete().eq('id', projectId);\r\n    if (!error) {\r\n      setOwnedProjects(prev => prev.filter(p => p.id !== projectId));\r\n    }\r\n  };\r\n\r\n  const openEditDialog = async (project) => {\r\n    setProjectToEdit(project);\r\n    const { data: travelers } = await supabase\r\n      .from('invitations')\r\n      .select('*')\r\n      .eq('project_id', project.id);\r\n\r\n    setEditFields({\r\n      project_name: project.project_name,\r\n      start_date: project.start_date,\r\n      end_date: project.end_date,\r\n      countries: project.countries || [],\r\n      cities: project.cities || {},\r\n      travelers: travelers || []\r\n    });\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditFieldChange = (field, value) => {\r\n    setEditFields(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    const { project_name, start_date, end_date, countries, cities, travelers } = editFields;\r\n\r\n    const { error } = await supabase\r\n      .from('projects')\r\n      .update({ project_name, start_date, end_date, countries, cities })\r\n      .eq('id', projectToEdit.id);\r\n\r\n    if (error) {\r\n      alert('Failed to update project');\r\n      return;\r\n    }\r\n\r\n    // Get existing invitations\r\n    const { data: existing } = await supabase\r\n      .from('invitations')\r\n      .select('*')\r\n      .eq('project_id', projectToEdit.id);\r\n\r\n    const existingEmails = new Set(existing.map(i => i.invited_email));\r\n    const updatedEmails = new Set(travelers.map(t => t.invited_email));\r\n\r\n    // Insert or update travelers\r\n    for (const t of travelers) {\r\n      const existingTraveler = existing.find(e => e.invited_email === t.invited_email);\r\n      if (existingTraveler) {\r\n        await supabase.from('invitations').update({\r\n          name: t.name\r\n        }).eq('id', existingTraveler.id);\r\n      } else {\r\n        await supabase.from('invitations').insert({\r\n          project_id: projectToEdit.id,\r\n          name: t.name,\r\n          invited_email: t.invited_email,\r\n          status: 'pending'\r\n        });\r\n      }\r\n    }\r\n\r\n    // Delete removed travelers\r\n    for (const e of existing) {\r\n      if (!updatedEmails.has(e.invited_email)) {\r\n        await supabase.from('invitations').delete().eq('id', e.id);\r\n      }\r\n    }\r\n\r\n    setOwnedProjects(prev =>\r\n      prev.map(p =>\r\n        p.id === projectToEdit.id ? { ...p, project_name, start_date, end_date, countries, cities } : p\r\n      )\r\n    );\r\n\r\n    alert('Project updated');\r\n    setEditDialogOpen(false);\r\n  };\r\n\r\n  const handleTravelerChange = (index, field, value) => {\r\n    const updated = [...editFields.travelers];\r\n    updated[index][field] = value;\r\n    setEditFields(prev => ({ ...prev, travelers: updated }));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\">Your Dashboard</Typography>\r\n      <Typography sx={{ mb: 3 }}>Logged in as: <strong>{userEmail}</strong></Typography>\r\n\r\n      <Box sx={{ mb: 4 }}>\r\n        <Button variant=\"contained\" onClick={() => navigate('/create-project')}>\r\n          + Create New Project\r\n        </Button>\r\n      </Box>\r\n\r\n      {loading ? <CircularProgress /> : (\r\n        <>\r\n          <Paper sx={{ p: 2, mb: 4 }}>\r\n            <Typography variant=\"h6\">Your Projects</Typography>\r\n            <Divider sx={{ mb: 1 }} />\r\n            {ownedProjects.length === 0 ? (\r\n              <Typography>No projects yet.</Typography>\r\n            ) : (\r\n              <List>\r\n                {ownedProjects.map((project) => (\r\n                  <ListItem\r\n                    key={project.id}\r\n                    secondaryAction={\r\n                      <>\r\n                        <IconButton onClick={() => openEditDialog(project)}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton color=\"error\" onClick={() => handleDelete(project.id)}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    }\r\n                  >\r\n                    <ListItemText\r\n                      primary={project.project_name}\r\n                      secondary={`Start: ${project.start_date} â€” End: ${project.end_date}`}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\">Invited Projects</Typography>\r\n            <Divider sx={{ mb: 1 }} />\r\n            <List>\r\n              {invitedProjects.map((p) => (\r\n                <ListItem key={p.id}>\r\n                  <ListItemText primary={p.project_name} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </>\r\n      )}\r\n\r\n      {/* EDIT MODAL */}\r\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Edit Project</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Project Name\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={editFields.project_name}\r\n            onChange={(e) => handleEditFieldChange('project_name', e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={editFields.start_date}\r\n            onChange={(e) => handleEditFieldChange('start_date', e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={editFields.end_date}\r\n            onChange={(e) => handleEditFieldChange('end_date', e.target.value)}\r\n          />\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>Countries</InputLabel>\r\n            <Select\r\n              multiple\r\n              value={editFields.countries}\r\n              onChange={(e) => {\r\n                const selected = e.target.value;\r\n                const newCities = { ...editFields.cities };\r\n                selected.forEach((c) => {\r\n                  if (!newCities[c]) newCities[c] = [];\r\n                });\r\n                Object.keys(newCities).forEach((c) => {\r\n                  if (!selected.includes(c)) delete newCities[c];\r\n                });\r\n                setEditFields((prev) => ({ ...prev, countries: selected, cities: newCities }));\r\n              }}\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\r\n                  {selected.map((value) => <Chip key={value} label={value} />)}\r\n                </Box>\r\n              )}\r\n            >\r\n              {availableCountries.map((country) => (\r\n                <MenuItem key={country} value={country}>{country}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          {editFields.countries.map((country) => (\r\n            <FormControl fullWidth sx={{ mt: 2 }} key={country}>\r\n              <InputLabel>{`Cities in ${country}`}</InputLabel>\r\n              <Select\r\n                multiple\r\n                value={editFields.cities[country] || []}\r\n                onChange={(e) => {\r\n                  const selected = e.target.value;\r\n                  setEditFields(prev => ({\r\n                    ...prev,\r\n                    cities: { ...prev.cities, [country]: selected }\r\n                  }));\r\n                }}\r\n                renderValue={(selected) => (\r\n                  <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\r\n                    {selected.map((value) => <Chip key={value} label={value} />)}\r\n                  </Box>\r\n                )}\r\n              >\r\n                {(availableCities[country] || []).map((city) => (\r\n                  <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          ))}\r\n\r\n          <Box sx={{ mt: 4 }}>\r\n            <Typography variant=\"h6\">Travelers</Typography>\r\n            {editFields.travelers.map((t, i) => (\r\n              <Box key={i} sx={{ display: 'flex', gap: 1, my: 1 }}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={t.name}\r\n                  onChange={(e) => handleTravelerChange(i, 'name', e.target.value)}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  value={t.invited_email}\r\n                  onChange={(e) => handleTravelerChange(i, 'invited_email', e.target.value)}\r\n                />\r\n                <IconButton color=\"error\" onClick={() => {\r\n                  const updated = [...editFields.travelers];\r\n                  updated.splice(i, 1);\r\n                  setEditFields(prev => ({ ...prev, travelers: updated }));\r\n                }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Box>\r\n            ))}\r\n            <Button onClick={() => setEditFields(prev => ({\r\n              ...prev,\r\n              travelers: [...prev.travelers, { name: '', invited_email: '' }]\r\n            }))}>\r\n              + Add Traveler\r\n            </Button>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleSaveEdit}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}